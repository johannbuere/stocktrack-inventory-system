/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package login;


/**
 *
 * @author Joy De Castro
 */


import java.awt.Color;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public class Login extends javax.swing.JFrame {
    
    private String roleU = null;
    private static final String userTxt = "src/user/users.txt";

    
    // admin has predetermined value already so no need text file for it like receiptionist
    // will fix receptionist_credentials.txt later as it doesnt have one atm
    
    private boolean loginSuccessful = false;

    //checks if login succesful
    public boolean isLoginSuccessful() {
        return loginSuccessful;
    }
    
    // for role getter
    public String getRole() {
        return roleU;
    }
    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        
        //placeholder styles here
        addPlaceholder(UserId);
        addPlaceholder(PasswordTxt);
    }
    
    //Seperate methods for login placeholders
    public void addPlaceholder(JTextField textField){
        Font font = textField.getFont();
        font = font.deriveFont(Font.PLAIN);
        textField.setFont(font);
        textField.setForeground(Color.gray);
    }

    public void removePlaceholder(JTextField textField){
        Font font = textField.getFont();
        font = font.deriveFont(Font.PLAIN|Font.BOLD);
        textField.setFont(font);
        textField.setForeground(Color.black);
    }
    
    private String validateUserCredentials(String userId, String password) {
        try (BufferedReader br = new BufferedReader(new FileReader(userTxt))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] credentials = line.split(","); // Expecting format: username,password,role
                if (credentials.length == 3 && credentials[0].equals(userId) && credentials[1].equals(password)) {
                    return credentials[2]; // Return the role (e.g., "admin" or "receptionist")
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error reading users file.", "File Error", JOptionPane.ERROR_MESSAGE);
        }
        return null; // Return null if validation fails
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userType = new javax.swing.ButtonGroup();
        LogP = new javax.swing.JPanel();
        LoginLabelPanel = new javax.swing.JPanel();
        LoginLabel = new javax.swing.JLabel();
        LoginInput = new javax.swing.JPanel();
        UserIDPanel = new javax.swing.JPanel();
        UserId = new javax.swing.JTextField();
        PasswordPanel = new javax.swing.JPanel();
        PasswordTxt = new javax.swing.JPasswordField();
        UserTypePanel = new javax.swing.JPanel();
        ManagerRadio = new javax.swing.JRadioButton();
        ReceptionistRadio = new javax.swing.JRadioButton();
        LoginButtonPanel = new javax.swing.JPanel();
        LoginButton = new javax.swing.JButton();
        LogPSideImage = new javax.swing.JPanel();
        SideImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);

        LogP.setBackground(new java.awt.Color(15, 82, 186));
        LogP.setPreferredSize(new java.awt.Dimension(400, 600));

        LoginLabelPanel.setBackground(new java.awt.Color(15, 82, 186));
        LoginLabelPanel.setPreferredSize(new java.awt.Dimension(400, 150));

        LoginLabel.setBackground(new java.awt.Color(255, 255, 255));
        LoginLabel.setFont(new java.awt.Font("Google Sans Display", 1, 42)); // NOI18N
        LoginLabel.setForeground(new java.awt.Color(255, 255, 255));
        LoginLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/StockTrack_Logo_Icon_Wh.png"))); // NOI18N
        LoginLabel.setText("StockTrack");
        LoginLabel.setPreferredSize(new java.awt.Dimension(130, 31));

        javax.swing.GroupLayout LoginLabelPanelLayout = new javax.swing.GroupLayout(LoginLabelPanel);
        LoginLabelPanel.setLayout(LoginLabelPanelLayout);
        LoginLabelPanelLayout.setHorizontalGroup(
            LoginLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginLabelPanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(LoginLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );
        LoginLabelPanelLayout.setVerticalGroup(
            LoginLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginLabelPanelLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(LoginLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        LogP.add(LoginLabelPanel);

        LoginInput.setBackground(new java.awt.Color(15, 82, 186));
        LoginInput.setPreferredSize(new java.awt.Dimension(400, 150));

        UserIDPanel.setBackground(new java.awt.Color(255, 255, 255));
        UserIDPanel.setLayout(new java.awt.BorderLayout(4, 4));

        UserId.setBackground(new java.awt.Color(255, 255, 255));
        UserId.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        UserId.setForeground(new java.awt.Color(153, 153, 153));
        UserId.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        UserId.setText("User ID");
        UserId.setToolTipText("");
        UserId.setActionCommand("<Not Set>");
        UserId.setCaretColor(new java.awt.Color(255, 255, 255));
        UserId.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        UserId.setPreferredSize(new java.awt.Dimension(300, 50));
        UserId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                UserIdFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                UserIdFocusLost(evt);
            }
        });
        UserId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserIdActionPerformed(evt);
            }
        });
        UserIDPanel.add(UserId, java.awt.BorderLayout.CENTER);

        LoginInput.add(UserIDPanel);

        PasswordPanel.setBackground(new java.awt.Color(255, 255, 255));
        PasswordPanel.setLayout(new java.awt.BorderLayout(0, 4));

        PasswordTxt.setBackground(new java.awt.Color(255, 255, 255));
        PasswordTxt.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        PasswordTxt.setForeground(new java.awt.Color(153, 153, 153));
        PasswordTxt.setText("Password");
        PasswordTxt.setCaretColor(new java.awt.Color(255, 255, 255));
        PasswordTxt.setEchoChar('\u0000');
        PasswordTxt.setPreferredSize(new java.awt.Dimension(300, 50));
        PasswordTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PasswordTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PasswordTxtFocusLost(evt);
            }
        });
        PasswordPanel.add(PasswordTxt, java.awt.BorderLayout.CENTER);

        LoginInput.add(PasswordPanel);

        UserTypePanel.setOpaque(false);
        UserTypePanel.setPreferredSize(new java.awt.Dimension(300, 120));

        ManagerRadio.setBackground(new java.awt.Color(15, 82, 186));
        userType.add(ManagerRadio);
        ManagerRadio.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        ManagerRadio.setForeground(new java.awt.Color(255, 255, 255));
        ManagerRadio.setText("Manager");
        ManagerRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManagerRadioActionPerformed(evt);
            }
        });
        UserTypePanel.add(ManagerRadio);

        ReceptionistRadio.setBackground(new java.awt.Color(15, 82, 186));
        userType.add(ReceptionistRadio);
        ReceptionistRadio.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        ReceptionistRadio.setForeground(new java.awt.Color(255, 255, 255));
        ReceptionistRadio.setText("Receptionist");
        ReceptionistRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReceptionistRadioActionPerformed(evt);
            }
        });
        UserTypePanel.add(ReceptionistRadio);

        LoginInput.add(UserTypePanel);

        LogP.add(LoginInput);

        LoginButtonPanel.setBackground(new java.awt.Color(15, 82, 186));
        LoginButtonPanel.setPreferredSize(new java.awt.Dimension(400, 100));

        LoginButton.setBackground(new java.awt.Color(255, 255, 255));
        LoginButton.setFont(new java.awt.Font("Google Sans Display", 1, 14)); // NOI18N
        LoginButton.setForeground(new java.awt.Color(15, 82, 186));
        LoginButton.setText("LOGIN");
        LoginButton.setBorderPainted(false);
        LoginButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        LoginButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LoginButtonPanelLayout = new javax.swing.GroupLayout(LoginButtonPanel);
        LoginButtonPanel.setLayout(LoginButtonPanelLayout);
        LoginButtonPanelLayout.setHorizontalGroup(
            LoginButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginButtonPanelLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );
        LoginButtonPanelLayout.setVerticalGroup(
            LoginButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginButtonPanelLayout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        LogP.add(LoginButtonPanel);

        getContentPane().add(LogP, java.awt.BorderLayout.WEST);

        LogPSideImage.setBackground(new java.awt.Color(255, 255, 255));
        LogPSideImage.setPreferredSize(new java.awt.Dimension(600, 600));

        SideImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SideImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/StockTrack_SideImage.png"))); // NOI18N
        SideImage.setOpaque(true);

        javax.swing.GroupLayout LogPSideImageLayout = new javax.swing.GroupLayout(LogPSideImage);
        LogPSideImage.setLayout(LogPSideImageLayout);
        LogPSideImageLayout.setHorizontalGroup(
            LogPSideImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LogPSideImageLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(SideImage)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        LogPSideImageLayout.setVerticalGroup(
            LogPSideImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LogPSideImageLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(SideImage)
                .addGap(0, 0, 0))
        );

        getContentPane().add(LogPSideImage, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void UserIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserIdActionPerformed

    private void ReceptionistRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReceptionistRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ReceptionistRadioActionPerformed

    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed
        // Validate inputs
        String userId = UserId.getText().trim();
        String password = new String(PasswordTxt.getPassword()).trim();
        String roleU = validateUserCredentials(userId, password);


        if (userId.equals("User ID") || userId.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a User ID.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (password.equals("Password") || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a Password.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!ManagerRadio.isSelected() && !ReceptionistRadio.isSelected()) {
            JOptionPane.showMessageDialog(this, "Please select a user type.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (roleU == null) {
            JOptionPane.showMessageDialog(this, "Invalid username or password.", "Login Failed", JOptionPane.ERROR_MESSAGE);
        } else {
            // Check if the role matches the selected user type
            if ((ManagerRadio.isSelected() && roleU.equals("manager")) ||
                (ReceptionistRadio.isSelected() && roleU.equals("receptionist"))) {
                // Set role and indicate success
                this.roleU = roleU;
                this.loginSuccessful = true;
                JOptionPane.showMessageDialog(this, roleU + " Login Successful.", "Success", JOptionPane.INFORMATION_MESSAGE);
                this.dispose(); // Close Login window
            } else {
                // If the role doesn't match the selected user type
                JOptionPane.showMessageDialog(this, "User type does not match credentials.", "Login Failed", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_LoginButtonActionPerformed

    private void ManagerRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManagerRadioActionPerformed
        //TODO add your handling code here:
    }//GEN-LAST:event_ManagerRadioActionPerformed

    private void UserIdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UserIdFocusGained
        if (UserId.getText().equals("User ID")){
            UserId.setText(null);
            UserId.requestFocus();
            
            //remove placeholder style
            removePlaceholder(UserId);
        }        
        
    }//GEN-LAST:event_UserIdFocusGained

    private void PasswordTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PasswordTxtFocusGained
        if (PasswordTxt.getText().equals("Password")){
            PasswordTxt.setText(null);
            PasswordTxt.requestFocus();
            
            //remove placeholder style
            PasswordTxt.setEchoChar('\u2022');
            //remove placeholder style
            removePlaceholder(PasswordTxt);
        }        
        
    }//GEN-LAST:event_PasswordTxtFocusGained

    private void UserIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UserIdFocusLost
        if (UserId.getText().length()==0){
            //add placeholder style
            addPlaceholder(UserId);
            
            UserId.setText("User ID");
        }   
         
        
    }//GEN-LAST:event_UserIdFocusLost

    private void PasswordTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PasswordTxtFocusLost
        if (PasswordTxt.getText().length()==0){
            //add placeholder style
            addPlaceholder(PasswordTxt);
            
            PasswordTxt.setText("Password");
            PasswordTxt.setEchoChar('\u0000');
        } 

    }//GEN-LAST:event_PasswordTxtFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel LogP;
    private javax.swing.JPanel LogPSideImage;
    private javax.swing.JButton LoginButton;
    private javax.swing.JPanel LoginButtonPanel;
    private javax.swing.JPanel LoginInput;
    private javax.swing.JLabel LoginLabel;
    private javax.swing.JPanel LoginLabelPanel;
    private javax.swing.JRadioButton ManagerRadio;
    private javax.swing.JPanel PasswordPanel;
    private javax.swing.JPasswordField PasswordTxt;
    private javax.swing.JRadioButton ReceptionistRadio;
    private javax.swing.JLabel SideImage;
    private javax.swing.JPanel UserIDPanel;
    private javax.swing.JTextField UserId;
    private javax.swing.JPanel UserTypePanel;
    private javax.swing.ButtonGroup userType;
    // End of variables declaration//GEN-END:variables





}




